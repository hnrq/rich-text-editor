{"version":3,"sources":["theme/index.tsx","components/Leaf/index.tsx","components/Element/index.tsx","common/index.ts","utils/index.ts","components/MarkButton/index.tsx","components/HoveringToolbar/index.tsx","components/BlockButton/index.tsx","containers/Editor/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","colors","background","foreground","primary","secondary","inactive","mediaQuery","phone","tablet","spacing","base","xs","baseSpacing","sm","md","xl","Leaf","attributes","children","leaf","bold","code","italic","underline","Element","element","type","MARKS","BLOCKS","LIST_TYPES","isMarkActive","editor","format","marks","Editor","isBlockActive","selection","nodes","at","unhangRange","match","n","isEditor","isElement","Button","styled","button","active","MarkButton","icon","useSlate","onMouseDown","e","preventDefault","removeMark","addMark","toggleMark","Menu","div","rect","top","window","pageYOffset","offsetHeight","left","pageXOffset","offsetWidth","width","HoveringToolbar","useState","visible","setVisible","ref","useRef","useMemo","getSelection","rangeCount","getRangeAt","getBoundingClientRect","useEffect","Boolean","ReactEditor","isFocused","Range","isCollapsed","string","isSelected","ReactDOM","createPortal","current","map","mark","document","body","getIcon","BlockButton","isActive","isList","includes","Transforms","unwrapNodes","node","split","newProperties","setNodes","block","wrapNodes","toggleBlock","EditorContainer","props","Header","withHistory","withReact","createEditor","text","value","setValue","renderLeaf","useCallback","renderElement","onChange","filter","autoFocus","placeholder","onKeyDown","shiftKey","console","log","key","insertText","AppContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fas","faUnderline","faBold","faItalic","faCode","faListOl","faListUl","faHeading","faQuoteLeft","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89b8af1d.chunk.js","sourcesContent":["const baseSpacing = 2;\nconst theme = {\n  colors: {\n    background: '#f0f0f0',\n    foreground: '#ffffff',\n    primary: '#1f1f1f',\n    secondary: '#a8a8a8',\n    inactive: '#aaaaaa',\n  },\n  mediaQuery: {\n    phone: '@media screen and (max-width: 600px)',\n    tablet: '@media screen and (max-width: 1200px)',\n  },\n  spacing: {\n    base: `${baseSpacing}rem`,\n    xs: `${baseSpacing / 2}rem`,\n    sm: `${baseSpacing}rem`,\n    md: `${baseSpacing * 2}rem`,\n    xl: `${baseSpacing * 3}rem`,\n  },\n};\n\nexport default theme;\n","import {FC} from 'react';\nimport {MarkEnum} from 'common/types';\n\nexport interface LeafProps {\n  attributes?: {[key: string]: unknown};\n  leaf: {\n    [key in MarkEnum]?: true;\n  };\n}\n\nconst Leaf: FC<LeafProps> = ({attributes, children, leaf}) => {\n  if (leaf.bold) children = <strong data-testid=\"bold-leaf\">{children}</strong>;\n  if (leaf.code) children = <code data-testid=\"code-leaf\">{children}</code>;\n  if (leaf.italic) children = <em data-testid=\"italic-leaf\">{children}</em>;\n  if (leaf.underline) children = <u data-testid=\"underline-leaf\">{children}</u>;\n\n  return <span {...attributes}>{children}</span>;\n};\n\nexport default Leaf;\n","import {FC} from 'react';\nimport {BlockEnum} from 'common/types';\n\ninterface ElementProps {\n  attributes?: {[key: string]: string};\n  element: {\n    type?: BlockEnum;\n  };\n}\n\nconst Element: FC<ElementProps> = ({attributes, children, element}) => {\n  switch (element.type) {\n    case 'block-quote':\n      return (\n        <blockquote data-testid=\"block-quote\" {...attributes}>\n          {children}\n        </blockquote>\n      );\n    case 'bulleted-list':\n      return (\n        <ul data-testid=\"bulleted-list\" {...attributes}>\n          {children}\n        </ul>\n      );\n    case 'heading-one':\n      return (\n        <h1 data-testid=\"heading-one\" {...attributes}>\n          {children}\n        </h1>\n      );\n    case 'heading-two':\n      return (\n        <h2 data-testid=\"heading-two\" {...attributes}>\n          {children}\n        </h2>\n      );\n    case 'list-item':\n      return (\n        <li data-testid=\"list-item\" {...attributes}>\n          {children}\n        </li>\n      );\n    case 'numbered-list':\n      return (\n        <ol data-testid=\"numbered-list\" {...attributes}>\n          {children}\n        </ol>\n      );\n    default:\n      return (\n        <p data-testid=\"paragraph\" {...attributes}>\n          {children}\n        </p>\n      );\n  }\n};\n\nexport default Element;\n","export const MARKS = ['bold', 'code', 'italic', 'underline'] as const;\nexport const LISTS = ['list-item', 'numbered-list', 'bulleted-list'] as const;\nexport const BLOCKS = [\n  'heading-one',\n  'heading-two',\n  'block-quote',\n  'paragraph',\n  ...LISTS,\n] as const;\n","import {Editor, Transforms, Element, Range} from 'slate';\nimport {MarkEnum, BlockEnum, ListEnum} from 'common/types';\nimport {EditorType} from 'common/types';\nimport {ReactEditor} from 'slate-react';\n\nexport const LIST_TYPES: Array<ListEnum> = ['list-item', 'numbered-list'];\n\nexport const isMarkActive = (editor: EditorType, format: MarkEnum): boolean => {\n  const marks = Editor.marks(editor) as unknown as {[key: string]: boolean};\n  return marks ? marks[format] === true : false;\n};\n\nexport const toggleMark = (editor: EditorType, format: MarkEnum): void => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nexport const isSelected = (editor: Editor): boolean => {\n  const {selection} = editor;\n  return Boolean(\n    selection &&\n    ReactEditor.isFocused(editor) &&\n    !Range.isCollapsed(selection) &&\n    Editor.string(editor, selection) !== ''\n  );\n};\n\nexport const isBlockActive = (\n  editor: EditorType,\n  format: BlockEnum,\n): boolean => {\n  const {selection} = editor;\n  if (!selection) return false;\n\n  const [match] = Editor.nodes(editor, {\n    at: Editor.unhangRange(editor, selection),\n    match: n =>\n      !Editor.isEditor(n) && Element.isElement(n) && n.type === format,\n  });\n\n  return !!match;\n};\n\nexport const toggleBlock = (editor: EditorType, format: BlockEnum): void => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format as ListEnum);\n\n  Transforms.unwrapNodes(editor, {\n    match: node =>\n      !Editor.isEditor(node) &&\n      Element.isElement(node) &&\n      LIST_TYPES.includes(node.type as ListEnum),\n    split: true,\n  });\n  const newProperties: Partial<Element> = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  };\n  Transforms.setNodes(editor, newProperties);\n\n  if (!isActive && isList) {\n    const block = {type: format, children: []};\n    Transforms.wrapNodes(editor, block);\n  }\n};\n","import {FC} from 'react';\nimport {useSlate} from 'slate-react';\nimport styled from 'styled-components';\nimport {MarkEnum} from 'common/types';\nimport {toggleMark, isMarkActive} from 'utils';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\ninterface MarkButtonProps {\n  format: MarkEnum;\n  icon?: 'underline' | 'bold' | 'italic' | 'code';\n}\n\nconst Button = styled.button<{active: boolean}>`\n  color: ${({active, theme}) =>\n    active ? theme.colors.foreground : theme.colors.inactive};\n  background: #000;\n  border: none;\n  margin: 0;\n  padding: 0.5rem;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst MarkButton: FC<MarkButtonProps> = ({format, children, icon}) => {\n  const editor = useSlate();\n\n  return (\n    <Button\n      data-testid=\"mark-button\"\n      onMouseDown={e => {\n        e.preventDefault();\n        toggleMark(editor, format);\n      }}\n      active={isMarkActive(editor, format)}\n    >\n      {children}\n      {icon && <FontAwesomeIcon icon={icon} data-testid=\"mark-icon\" />}\n    </Button>\n  );\n};\n\nexport default MarkButton;\n","import {MARKS} from 'common';\nimport {EditorType} from 'common/types';\nimport MarkButton from 'components/MarkButton';\nimport {FC, useEffect, useState, useMemo, useRef} from 'react';\nimport ReactDOM from 'react-dom';\nimport {ReactEditor, useSlate} from 'slate-react';\nimport styled from 'styled-components';\n\nimport {isSelected} from 'utils';\n\ninterface MenuProps {\n  rect?: DOMRect;\n  element?: HTMLDivElement | null;\n}\n\nconst Menu = styled.div<MenuProps>`\n  position: absolute;\n  background: #000000;\n  z-index: 1;\n  border-radius: 1rem;\n  transform: translate(-50%, -110%);\n  top: ${({rect, element}) =>\n    (rect?.top ?? 0) + window.pageYOffset - (element?.offsetHeight ?? 0)}px;\n  left: ${({rect, element}) =>\n    (rect?.left ?? 0) +\n    window.pageXOffset -\n    (element?.offsetWidth ?? 0) / 2 +\n    (rect?.width ?? 0) / 2}px;\n`;\n\nconst HoveringToolbar: FC = () => {\n  const [visible, setVisible] = useState(false);\n  const editor = useSlate() as ReactEditor;\n  const ref = useRef<HTMLDivElement>(null);\n  const rect = useMemo(() => {\n    const selection = window.getSelection && window.getSelection();\n    if ((selection?.rangeCount ?? 0) > 0)\n      return selection?.getRangeAt(0).getBoundingClientRect();\n  }, [visible]);\n\n  useEffect(() => {\n    if (isSelected(editor as EditorType) && window.getSelection())\n      setVisible(true);\n    else setVisible(false);\n  }, [editor.selection]);\n\n  return visible\n    ? ReactDOM.createPortal(\n        <Menu element={ref.current} rect={rect} data-testid=\"hovering-toolbar\">\n          {MARKS.map(mark => (\n            <MarkButton key={mark} format={mark} icon={mark} />\n          ))}\n        </Menu>,\n        document.body,\n      )\n    : null;\n};\n\nexport default HoveringToolbar;\n","import {FC} from 'react';\nimport {useSlate} from 'slate-react';\nimport styled from 'styled-components';\nimport {BlockEnum} from 'common/types';\nimport {toggleBlock, isBlockActive} from 'utils';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\ninterface BlockButtonProps {\n  format: BlockEnum;\n  icon?: BlockEnum;\n}\n\nconst Button = styled.button<{active: boolean}>`\n  color: ${({active, theme}) =>\n    active ? theme.colors.primary : theme.colors.inactive};\n  background: ${({theme}) => theme.colors.foreground};\n  border: none;\n  font: inherit;\n  margin: 0;\n  padding: 0.5em;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst getIcon = (icon: BlockEnum) => {\n  switch (icon) {\n    case 'bulleted-list':\n      return 'list-ul';\n    case 'numbered-list':\n      return 'list-ol';\n    case 'block-quote':\n      return 'quote-left';\n    default:\n      return 'heading';\n  }\n};\n\nconst BlockButton: FC<BlockButtonProps> = ({format, children, icon}) => {\n  const editor = useSlate();\n\n  return (\n    <Button\n      data-testid=\"block-button\"\n      onMouseDown={e => {\n        e.preventDefault();\n        toggleBlock(editor, format);\n      }}\n      active={isBlockActive(editor, format)}\n    >\n      {children}\n      {icon && <FontAwesomeIcon icon={getIcon(icon)} data-testid=\"mark-icon\" />}\n    </Button>\n  );\n};\n\nexport default BlockButton;\n","import {FC, useMemo, useState, useCallback} from 'react';\nimport {createEditor, Descendant} from 'slate';\nimport {withHistory} from 'slate-history';\nimport {Slate, Editable, withReact} from 'slate-react';\nimport styled from 'styled-components';\n\nimport Leaf from 'components/Leaf';\nimport Element from 'components/Element';\nimport {BlockEnum, EditorType, MarkEnum} from 'common/types';\nimport {BLOCKS} from 'common';\nimport HoveringToolbar from 'components/HoveringToolbar';\nimport BlockButton from 'components/BlockButton';\n\nexport type CustomElement = {type: BlockEnum; children: CustomText[]};\nexport type CustomText = {\n  [key in MarkEnum]?: true;\n} & {text: string};\n\ndeclare module 'slate' {\n  interface CustomTypes {\n    Editor: EditorType;\n    Element: CustomElement;\n    Text: CustomText;\n  }\n}\n\nconst EditorContainer = styled.div`\n  width: min(100vw, 800px);\n  height: 600px;\n  box-shadow: 0 0 20px rgba(100, 0, 0, 0.1);\n  padding: 2rem min(${props => props.theme.spacing.md}, 10vw);\n  box-sizing: border-box;\n  background-color: ${props => props.theme.colors.foreground};\n  ${props => props.theme.mediaQuery.phone} {\n    height: 100%;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  border-bottom: 2px solid ${({theme}) => theme.colors.background};\n  margin-bottom: ${({theme}) => theme.spacing.xs};\n`;\n\nconst Editor: FC = () => {\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  const [value, setValue] = useState<Descendant[]>([\n    {\n      type: 'paragraph',\n      children: [{text: ''}],\n    },\n  ]);\n  const renderLeaf = useCallback(props => <Leaf {...props} />, []);\n  const renderElement = useCallback(props => <Element {...props} />, []);\n\n  return (\n    <EditorContainer>\n      <Slate value={value} onChange={setValue} editor={editor}>\n        <HoveringToolbar />\n        <Header>\n          {BLOCKS.filter(\n            block => !['paragraph', 'list-item'].includes(block),\n          ).map(block => (\n            <BlockButton format={block} icon={block} key={block} />\n          ))}\n        </Header>\n        <Editable\n          autoFocus\n          renderLeaf={renderLeaf}\n          renderElement={renderElement}\n          placeholder=\"Go on, type something...\"\n          onKeyDown={e => {\n            if (e.code === 'Enter' && e.shiftKey) {\n              console.log(e.key, e.shiftKey);\n              e.preventDefault();\n              editor.insertText('\\n');\n            }\n          }}\n        />\n      </Slate>\n    </EditorContainer>\n  );\n};\n\nexport default Editor;\n","import {FC} from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport theme from 'theme';\nimport Editor from 'containers/Editor';\n\nconst AppContainer = styled.div`\n  height: 100vh;\n  background: ${props => props.theme.colors.background};\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst App: FC = () => (\n  <ThemeProvider theme={theme}>\n    <AppContainer>\n      <Editor />\n    </AppContainer>\n  </ThemeProvider>\n);\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {\n  faUnderline,\n  faBold,\n  faItalic,\n  faCode,\n  faListOl,\n  faListUl,\n  faHeading,\n  faQuoteLeft,\n  fas,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  fas,\n  faUnderline,\n  faBold,\n  faItalic,\n  faCode,\n  faListOl,\n  faListUl,\n  faHeading,\n  faQuoteLeft,\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}